var axios = require("axios");
var R = require("ramda");
var { encode } = require("base-64");

const makeError = (code, message) => {
  const error = new Error(message);
  error.code = code;
  return error;
};

const validateEmail = (email) => {
  var mailformat = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
  if (mailformat.test(email)) {
    return true;
  }
  return false;
};

const bearerAuth = (token) => ({
  Authorization: R.concat("Bearer ", token),
  "Content-Type": "application/json",
});

const basicAuth = (username, password) => ({
  Authorization: encode(`${username}:${password}`),
  "Content-Type": "application/json",
});

const apiCall = (data) => axios(data);

const isNotSpecialCharcterValidation = (input) => {
  let regex = /^[a-zA-Z0-9- ,_]*$/g;
  if (regex.test(input)) {
    return true;
  }
  return false;
};

module.exports = {
  makeError,
  validateEmail,
  basicAuth,
  bearerAuth,
  apiCall,
  isNotSpecialCharcterValidation,
};
